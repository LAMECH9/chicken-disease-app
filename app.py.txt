import streamlit as st
import tensorflow as tf
from PIL import Image
import numpy as np
import pandas as pd
import io
import os
import gdown

# Streamlit app configuration
st.set_page_config(page_title="Chicken Disease Classifier", page_icon="üêî")
st.title("Chicken Disease Classification App")
st.write("Upload an image of a chicken to classify its disease using a CNN model.")
st.write("Supported diseases: Based on the dataset labels.")

# Download best_model.h5 from Google Drive
@st.cache_resource
def load_model():
    model_path = 'best_model.h5'
    if not os.path.exists(model_path):
        st.write("Downloading model from Google Drive...")
        gdown.download('https://drive.google.com/uc?id=15nBdRGqmT06D8T9dc9egjVClyGR1In-9', model_path, quiet=False)
    return tf.keras.models.load_model(model_path)

# Replace YOUR_FILE_ID with the Google Drive file ID
model = load_model()

# Load class names from CSV
df = pd.read_csv('train_data.csv')
class_names = sorted(df['label'].unique())

# Preprocess image
def preprocess_image(image, target_size=(128, 128)):
    image = image.resize(target_size)
    image = np.array(image) / 255.0
    image = np.expand_dims(image, axis=0)
    return image

# File uploader
uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "png", "jpeg"])
if uploaded_file is not None:
    image = Image.open(uploaded_file).convert('RGB')
    st.image(image, caption='Uploaded Image', use_column_width=True)
    with st.spinner("Classifying..."):
        processed_image = preprocess_image(image)
        predictions = model.predict(processed_image)
        predicted_class = class_names[np.argmax(predictions[0])]
        confidence = float(np.max(predictions[0]))
    st.success("Classification Complete!")
    st.write(f"**Predicted Disease**: {predicted_class}")
    st.write(f"**Confidence**: {confidence:.2%}")
    if confidence < 0.5:
        st.warning("Low confidence prediction. Consider uploading a clearer image.")

# Footer
st.markdown("---")
st.write("Built with Streamlit and TensorFlow | Dataset: Chicken Diseases")